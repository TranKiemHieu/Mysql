services:
  db:
    image: mysql:8.0
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
    mem_limit: 512m
    ports:
      - "3307:3306"
    networks:
      - app-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION}
        PORT: ${PORT}
    ports:
      - "8081:${PORT}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
    env_file:
      - .env.dev
    container_name: app
    restart: unless-stopped
    networks:
      - app-network
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - app
    networks:
      - app-network
volumes:
  db-data:
  certbot-etc:
    driver: local
    driver_opts:
      type: none
      device: /etc/letsencrypt
      o: bind
  certbot-var:
    driver: local
    driver_opts:
      type: none
      device: /var/lib/letsencrypt
      o: bind
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /root/app/Mysql/src/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /root/app/Mysql/dhparam/
      o: bind
networks:
  app-network:
    driver: bridge
